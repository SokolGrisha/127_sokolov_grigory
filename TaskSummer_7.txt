Основы языка Java
-----------------------

1. Абстрактный уровень.
-----------------------
1.1 Создать интерфейс Game с одним методом без параметров run
1.2 Создать интерфейс GameObject с методами без параметров getX, getY, возвращающими int, методом getSymbol, возвращающим char
1.3 Создать интерфейс Movable, расширяющий GameObject с методами moweUp, moweDown, moweLeft, moweRight без параметров
1.4 Создать интерфейс Walkable, расширяющий GameObject, с методом isWalkable, возвращающим boolean, без параметров.
1.5 Создать интерфейс Map с методом getWalkable, принимающим целочисленные координаты x, y и возвращающем Walkable, с методом getPlayer, не принимающим параметров, возвращающим Movable.
1.6 Создать интерфейс GameBuilder, содержащий метод build без параметров, возвращающий Game.

2. Уровень реализации.
----------------------
2.1 Создать класс BaseGameObject, реализующий интерфейс GameObject. getX, getY должны возвращать текущие координаты объекта, getSymbol - его символьное представление.
2.2 Создать класс Player, наследующий BaseGameObject и реализующий дополнительно Movable. Реализация должна изменять координаты объекта соответствующим образом.
2.3 Создать класс Wall, наследующий BaseGameObject и реализующий Walkable. Метод isWalkable должен возвращать false
2.4 Создать класс Floor, наследующий BaseGameObject и реализующий Walkable. Метод isWalkable должен возвращать true
2.5 Создать класс SimpleMap, реализующий интерфейс Map. Объект SimpleMap должен содержать двуменрый массив Walkable, объект Player. Реализации getWalkable, getPlayer должны, соответственно, возвращать объект из массива и объект Player. Обработку ошибок реализовать через вывод на консоль.
2.6 Создать класс <name>Game (<name> - вашы полные ФИО), реализующий метод run. В классе должен содержаться объект Map. Реализация должна содержать цикл, обрабатывающий команды игрока и выводящий на экран текущее состояние игры (все игровые объекты). В качестве визуального представления объектов использовать их getSymbol. К числу команд относятся команды перемещения персонажа по карте в четырех направлениях и команда завершения игры.
Возможность переместиться в клетку должна проверяться с помощью проверки isWalkable соответствующей клетки карты.
2.7 Создать класс <name>GameBuilder, реализуюущий построение объекта <name>Game. Он должен любым способом мостроить объект <name>Game (можно использовать хардкод, чтение из файла или что-то еще)

3. Запуск.
----------
3.1 В функции main создать объект <name>GameBuilder, с его помощью создать объект Game и вызвать для него метод run.

4. Тестирование.
----------------
4.1 Для всего кода необходимо реализовать тести JUnit

